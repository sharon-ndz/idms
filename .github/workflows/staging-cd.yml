name: Build and Deploy DL API [STAGING]

on:
  workflow_dispatch:  # Only runs when manually triggered

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get environment variables
        uses: ./.github/actions/fetch-env
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to AWS ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URL }}

      - name: Build and Push Docker Image
        run: |
          docker build -t api .
          docker save api | gzip > api.tar.gz
      # docker tag api:latest ${{ secrets.AWS_ECR_URL }}/api:latest
      #docker push ${{ secrets.AWS_ECR_URL }}/api:latest

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
      # aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_URL }}
      # docker pull ${{ secrets.AWS_ECR_URL }}/api:latest
      - name: Deploy to EC2 via SSH
        run: |
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no .env ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no api.tar.gz ubuntu@${{ secrets.EC2_IP }}:/home/ubuntu/
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
          cd /home/ubuntu/
          docker load < api.tar.gz
          sudo docker-compose up --env-file .env -d --build
          EOF
