name: Build and Deploy DL API [STAGING]

on:
  push:
  #workflow_dispatch:  # Only runs when manually triggered
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: "us-east-1"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0  # Update if needed

      - name: Initialize Terraform
        run: |
          cd VPC
          terraform init -backend-config="bucket=my-terraform-state-bckt"


      - name: Terraform Plan
        run: |
          cd VPC
          terraform plan -var-file=stage.tfvars
      - name: Terraform Apply
        run: |
          cd VPC
          terraform apply -auto-approve -var-file=stage.tfvars

     

      - name: Extract EC2 Public IP from Terraform Output
        id: extract_ip
        run: |
          cd VPC
          RAW_OUTPUT=$(terraform output -raw ec2_public_ip 2>&1 || true)
          IP=$(echo "$RAW_OUTPUT" | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n 1)
          echo "Raw Terraform Output: $IP"
          if [[ -z "$IP" ]]; then
            echo "❌ Could not extract valid EC2 IP from Terraform output:"
            echo "$RAW_OUTPUT"
            exit 1
          fi
    
          echo "✅ EC2 Public IP found: $IP"
          echo "EC2_IP=$IP" >> $GITHUB_ENV


    
        
      - name: Get environment variables
        uses: ./.github/actions/fetch-env
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

     
      - name: Build and Push Docker Image
        run: |
          docker build -t api .
          docker save api | gzip > api.tar.gz
     

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
     
      - name: Deploy to EC2 via SSH
        run: |
          echo "Deploying to EC2 at $EC2_IP"
          rsync -avz --progress -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" .env ubuntu@$EC2_IP:/home/ubuntu/
          rsync -avz --progress -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" docker-compose.yml ubuntu@$EC2_IP:/home/ubuntu/
          rsync -avz --progress -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" api.tar.gz ubuntu@$EC2_IP:/home/ubuntu/
    
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ubuntu@$EC2_IP << 'EOF'
          cd /home/ubuntu/
          if ! command -v docker &> /dev/null; then
            echo "Docker not found, installing..."
            sudo apt update && sudo apt install -y docker.io
            sudo usermod -aG docker ubuntu
            sudo systemctl restart docker
            sudo apt  install docker-compose -y
          fi
          docker load < api.tar.gz
          docker-compose down
          docker-compose up -d --build
          EOF
